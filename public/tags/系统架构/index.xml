<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统架构 on Keepwalking</title>
    <link>https://huangbaihua001.github.io/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 系统架构 on Keepwalking</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2022, Keepwalking; all rights reserved. Powered by Hugo</copyright>
    <lastBuildDate>Tue, 18 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://huangbaihua001.github.io/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>现代软件过度工程中的十大错误</title>
      <link>https://huangbaihua001.github.io/post/arch/consistent-hasing/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/arch/consistent-hasing/</guid>
      <description>
        
          
            &lt;p&gt;现代软件过度工程中的十大错误&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>面向领域的微服务架构-来自优步的实践</title>
      <link>https://huangbaihua001.github.io/post/microservice-architecture/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/microservice-architecture/</guid>
      <description>
        
          
            &lt;p&gt;面向领域的微服务架构-来自优步的实践。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>CAP理论简介</title>
      <link>https://huangbaihua001.github.io/post/cap-theorem/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/cap-theorem/</guid>
      <description>
        
          
          
        
      </description>
    </item>
    
    <item>
      <title>清晰架构</title>
      <link>https://huangbaihua001.github.io/post/the-clean-architecture/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/the-clean-architecture/</guid>
      <description>
        
          
            &lt;p&gt;&lt;a href=&#34;https://blog.cleancoder.com/&#34;&gt;Bob&lt;/a&gt;(编程界骨灰级人物)的清晰架构。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>一致性哈希</title>
      <link>https://huangbaihua001.github.io/post/consistent-hasing/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/consistent-hasing/</guid>
      <description>
        
          
            &lt;p&gt;最近我碰到过几次使用一致性哈希的情况。介绍这个概念的论文&lt;a href=&#34;http://citeseer.ist.psu.edu/karger97consistent.html&#34;&gt;《一致性哈希和随机树：分布式缓存协议，用于解决互联网应用中的热点问题。David Karger等人著》&lt;/a&gt;
出现在十年前，不过最近似乎这个概念已经悄悄地应用到从亚马逊的&amp;quot;Dynamo&amp;quot;到Last.fm提供的&amp;quot;Memcached&amp;quot;等越来越多的服务当中。那么，什么是一致性哈希，为什么要关心它？&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>优秀的可伸缩性</title>
      <link>https://huangbaihua001.github.io/post/awesome-scalability/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/awesome-scalability/</guid>
      <description>
        
          
            &lt;p&gt;这是一份经过精心整理的阅读清单，它详细说明了在大型系统中如何保障系统的可伸缩性，可靠性以及高性能的常见模式。
该阅读清单由知名工程文章及来源可靠的资源组成。 这些内容对可伸缩性等相关概念均有很好的阐述。清单中研究的案例也
都来自于服务于数百万，乃至数十亿用户且经过实战检验过的系统。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>10大系统设计面试题</title>
      <link>https://huangbaihua001.github.io/post/top-10-sdis/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/top-10-sdis/</guid>
      <description>
        
          
            &lt;p&gt;如何设计大规模分布式系统已经成为软件工程师面试的标配。工程师们在系统设计面试中表现吃力，主要有两个原因：一、缺少开发大规模系统的经验；二、系统设计面试非机构化，开放性的特点，通常问题都没有标准答案。&lt;/p&gt;
&lt;p&gt;在系统设计面试中表现出色将给你带来高回报，因为它能反映你处理复杂系统的能力，并能转化成面试公司为你提供的高级职位和高薪水。&lt;/p&gt;
&lt;p&gt;本文列举了10大系统设计面试题，在这些面试题中，应该如何回答，跟面试官讨论的关键点应该在哪里。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>10倍程序员的秘密</title>
      <link>https://huangbaihua001.github.io/post/the-mythical-10x-programmer/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/the-mythical-10x-programmer/</guid>
      <description>
        
          
            &lt;p&gt;高效的程序员应该具备哪些素质，&amp;quot;10倍程序员&amp;quot;给你答案!。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>优秀的首席技术官</title>
      <link>https://huangbaihua001.github.io/post/awesome-cto/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huangbaihua001.github.io/post/awesome-cto/</guid>
      <description>
        
          
            &lt;p&gt;不想当 CTO 的工程师不是合格的工程师，那么如何才能成为一名优秀的CTO? 本文从网络上精心挑选了一系列文章，对有志成为一名 CTO 的工程师提供一些经验和方法。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
